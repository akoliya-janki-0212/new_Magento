<?php
$options = $this->getOption();

// Unload the product model to free up resources
?>
<select id="productSelect">
    <?php foreach ($options as $option): ?>
        <option value="<?php echo $option['value']; ?>"><?php echo $option['label']; ?></option>
    <?php endforeach; ?>
</select>
<button id="loadDetails">Load Parts and Manufacturer</button>

<div id="productDetails">
    <p><strong>Product Name:</strong> <span id="productName"></span></p>
    <p><strong>SKU:</strong> <span id="productSKU"></span></p>
    <p><strong>Part Numbers:</strong></p>
    <ul id="partNumbersList"></ul>
</div>
<div id="manufacturerDetails">
    <table id="manufacturerPartsTable">
        <thead>
            <tr>
                <th>Manufacturer</th>
                <th>Part</th>
                <th>Quantity</th>
                <th>Min Quantity</th>
            </tr>
        </thead>
        <tbody id="manufacturerPartsBody">
        </tbody>
    </table>
</div>
<?php if (Mage::getStoreConfig('exam_partmanager/general/enable_save_mfr_part_qty')) { ?>
    <button id="saveData">Save Manufacturer Part Quantities</button>
<?php } ?>
<script>
    document.observe('dom:loaded', function () {
        $('loadDetails').observe('click', function () {
            var productId = $('productSelect').value;
            new Ajax.Request('<?php echo $this->getUrl('*/*/getDetails'); ?>', {
                method: 'post',
                parameters: {
                    productId: productId,
                    form_key: '<?php echo $this->getFormKey(); ?>'
                },
                onSuccess: function (response) {
                    var data = response.responseText.evalJSON(true);
                    fillData(data);
                },
                onFailure: function () {
                    alert('Failed to load data. Please try again.');
                }
            });
        });
    });

    $('saveData').observe('click', function () {
        var manufacturerPartQuantities = {};
        var productId = $('productSelect').value;
        $$('#manufacturerPartsBody tr').each(function (row) {
            var manufacturer = row.down('td:first-child').textContent.trim();
            var part = row.down('td:nth-child(2)').textContent.trim();
            var quantity = row.down('input').value.trim();
            var min_qty = $("min-" + manufacturer).innerText;
            if (!manufacturerPartQuantities[manufacturer]) {
                manufacturerPartQuantities[manufacturer] = [];
            }
            manufacturerPartQuantities[manufacturer].push({
                part: part,
                quantity: quantity,
                min_qty: min_qty,
            });
        });
        var data = {
            productId: productId,
            manufacturerPartQuantities: Object.toJSON(manufacturerPartQuantities),
            form_key: '<?php echo $this->getFormKey(); ?>'
        };
        saveManufacturerPartQuantities(data);
    });

    function fillData(data) {
        $('productName').update(data.productDetails.name);
        $('productSKU').update(data.productDetails.sku);
        var partNumbers = data.productDetails.part_number.split(';');
        var partNumbersHTML = '';
        partNumbers.each(function (partNumber) {
            partNumbersHTML += '<li>' + partNumber + '</li>';
        });
        $('partNumbersList').update(partNumbersHTML);
        var manufacturerPartsHTML = '';
        Object.keys(data.manufacturerDetails).forEach(function (manufacturer) {
            var parts = data.manufacturerDetails[manufacturer].split(';');
            parts.each(function (part, index) {
                manufacturerPartsHTML += '<tr>' +
                    '<td>' + manufacturer + '</td>' +
                    '<td>' + part + '</td>' +
                    '<td><input type="text" name="' + manufacturer + '_' + part + '_qty" class="quantity-input" data-manufacturer="' + manufacturer + '"/></td>';
                if (index === 0) {
                    manufacturerPartsHTML += '<td rowspan="' + parts.length + '" class="min-quantity" id="min-' + manufacturer + '"></td>';

                }
                manufacturerPartsHTML += '</tr>';
            });
        });
        $('manufacturerPartsBody').update(manufacturerPartsHTML);

        // Add event listener for quantity input changes
        $$('.quantity-input').each(function (input) {
            input.observe('change', calculateMinQuantities);
        });
    }

    function calculateMinQuantities() {
        var manufacturerQuantities = {};

        $$('.quantity-input').each(function (input) {
            var manufacturer = input.getAttribute('data-manufacturer');
            var quantity = parseInt(input.value, 10);
            if (!manufacturerQuantities[manufacturer]) {
                manufacturerQuantities[manufacturer] = [];
            }
            if (!isNaN(quantity)) {
                manufacturerQuantities[manufacturer].push(quantity);
            }
        });

        Object.keys(manufacturerQuantities).forEach(function (manufacturer) {
            var minQuantity = Math.min.apply(0, manufacturerQuantities[manufacturer]);
            if (!(minQuantity == 'Infinity')) {

                $('min-' + manufacturer).update(minQuantity);
            }
        });
    }

    function saveManufacturerPartQuantities(data) {
        new Ajax.Request('<?php echo $this->getUrl('*/*/saveMfrParts'); ?>', {
            method: 'post',
            parameters: data,
            onSuccess: function (response) {
                alert('Manufacturer part quantities saved successfully.');
            },
            onFailure: function () {
                alert('Failed to save manufacturer part quantities. Please try again.');
            }
        });
    }
</script>